parameters:
  ServiceConnection: string
  SubscriptionId: string
  ResourceGroupName: string
  Location: string
  TemplateFilePath: string
  TemplateParamFilePath: string
  ServiceReleased: string
  sqlServerPasswordDA: string
  doSql: false 
  

steps:

- task: AzurePowerShell@5
  inputs:
    azureSubscription: ${{ parameters.ServiceConnection }}
    ScriptType: 'InlineScript'
    Inline: |
      #https://stackoverflow.com/questions/36948549/how-do-i-use-arm-outputs-values-another-release-task

      $resourceGroupName = 'lz-ghub-test-uks-rg-01'
      $lastDeployment = Get-AzResourceGroupDeployment -ResourceGroupName $resourceGroupName | Sort Timestamp -Descending | Select -First 1 

      if(!$lastDeployment) {
          throw "Deployment could not be found for Resource Group '$resourceGroupName'."
      }

      if(!$lastDeployment.Outputs) {
          throw "No output parameters could be found for the last deployment of Resource Group '$resourceGroupName'."
      }

      $sqlSrvNameOutput = $lastDeployment.Outputs.armOutput.Value
      Write-Host "##vso[task.setvariable variable=sqlSrvNameOutput;isOutput=true]$sqlSrvNameOutput"

    azurePowerShellVersion: 'LatestVersion'
  displayName: 'Set SqlServerName output variable'

- script: echo '$(sqlSrvNameOutput)'' or try echo '$env:sqlSrvNameOutput'
  displayName: 'Print SqlServerName output variable' 

- ${{ if eq(parameters.doSql, 'true') }}:
  - task: AzureResourceManagerTemplateDeployment@3
    #condition: and(succeed(), eq('${{parameters.doSql}}', 'true'))
    displayName: "Create ${{ parameters.ServiceReleased}}"
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: ${{ parameters.ServiceConnection }}
      subscriptionId: ${{ parameters.SubscriptionId }}
      action: 'Create Or Update Resource Group'
      resourceGroupName: ${{ parameters.ResourceGroupName }}
      location: ${{ parameters.Location }}
      templateLocation: 'Linked artifact'
      csmFile: ${{ parameters.TemplateFilePath }}
      csmParametersFile: ${{ parameters.TemplateParamFilePath }}
      deploymentMode: 'Incremental'
      overrideParameters: '-administratorLoginPassword ${{parameters.sqlServerPasswordDA}}'
      outputs: armOutput


- ${{ if eq(parameters.doSql, 'false') }}:
  - task: AzureResourceManagerTemplateDeployment@3
    #condition: and(succeed(), eq('${{parameters.doSql}}', 'true'))
    displayName: "Create ${{ parameters.ServiceReleased}}"
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: ${{ parameters.ServiceConnection }}
      subscriptionId: ${{ parameters.SubscriptionId }}
      action: 'Create Or Update Resource Group'
      resourceGroupName: ${{ parameters.ResourceGroupName }}
      location: ${{ parameters.Location }}
      templateLocation: 'Linked artifact'
      csmFile: ${{ parameters.TemplateFilePath }}
      csmParametersFile: ${{ parameters.TemplateParamFilePath }}
      deploymentMode: 'Incremental'

