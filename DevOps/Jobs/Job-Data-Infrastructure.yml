parameters:
  Environment: string
  Location: String
  ServiceConnection: String
  sqlServerPasswordDA: String
  clintazrealsecret: string
  clintazrealappid: string
  FeatureFlag_ADF_DeployPipelines: boolean
  FeatureFlag_SQL_Deploy: boolean

jobs: 
- deployment: JobDataInfrastructure
  pool:
   vmImage: 'windows-2019'
  displayName: Job - Data Infrastructure
  dependsOn: JobGlobalBuild
  variables:
    - template: ..\Variables\Variables-Global.yml
    - template: ..\Variables\Variables-${{ Parameters.Environment }}.yml
    - group: ${{ Parameters.Environment }}-vars
  environment: ${{ variables.AdoEnvironment }}
  strategy:
    runOnce:
      deploy:
        steps:
            
        # Create Azure SQL Server GHUB
        - ${{ if eq(parameters.FeatureFlag_SQL_Deploy, true) }}:
          - template: ../Tasks/Task-ArmTemplateDeployment.yml
            parameters:
              ServiceConnection: ${{ parameters.ServiceConnection }}
              SubscriptionId: ${{ variables.SubscriptionIdGHUB }}
              ResourceGroupName: ${{ variables.ResourceGroupNameGHUB }}
              Location: ${{ parameters.Location }}
              TemplateFilePath: '$(Agent.BuildDirectory)/${{ variables.AzureSqlServer }}' # From global variables
              TemplateParamFilePath: '$(Agent.BuildDirectory)/${{ variables.AzureSqlServerParametersData }}' # From environment specific variables
              ServiceReleased: "AzureSqlServer"
              sqlServerPasswordDA: $(SqlPassword)
              doSql: true
   
        # Create Data Factory (as LZ can have INT, DATA and SHARED, this can be seen in the last bit of each variable name such as SubscriptionIdData)
        - ${{ if eq(parameters.FeatureFlag_ADF_DeployPipelines, true) }}:
          - template: ../Tasks/Task-ArmTemplateDeployment.yml
            parameters:
              ServiceConnection: ${{ parameters.ServiceConnection }}
              SubscriptionId: ${{ variables.SubscriptionIdGHUB }}
              ResourceGroupName: ${{ variables.ResourceGroupNameGHUB }}
              Location: ${{ parameters.Location }}
              TemplateFilePath: '$(Agent.BuildDirectory)/${{ variables.AzureDataFactoryArmTemplate }}' # From global variables
              TemplateParamFilePath: '$(Agent.BuildDirectory)/${{ variables.AzureDataFactoryParametersData }}' # From environment specific variables
              ServiceReleased: "Azure Data Factory"
              doSql: false
              Environment:  ${{ parameters.Environment }}  