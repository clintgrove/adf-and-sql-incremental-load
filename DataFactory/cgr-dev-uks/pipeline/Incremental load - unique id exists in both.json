{
	"name": "Incremental load - unique id exists in both",
	"properties": {
		"description": "simple move of data from database with lastmodified date sort of column",
		"activities": [
			{
				"name": "For Table From Source",
				"description": "Copy to staging and then do merge update",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.tableList",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Lookup Source watermark",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Lookup Target watermark",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select MAX(@{item().WaterMark_Column}) as NewWatermarkvalue from @{item().TABLE_NAME}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "dba_fac_a1_source",
									"type": "DatasetReference",
									"parameters": {
										"schema": "not set because use query is set to Query",
										"tblname": "not set because use query is set to Query"
									}
								}
							}
						},
						{
							"name": "Lookup Target watermark",
							"description": "Look up watermark from your target system. where you want the data to land",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select * from [loadInfo_Watermark] where sourceinfo  =  '@{item().TABLE_NAME}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "dba_fac_a1_target",
									"type": "DatasetReference",
									"parameters": {
										"schema_tgt": "not set because use query is set to Query",
										"tblname_tgt": "not set because use query is set to Query"
									}
								}
							}
						},
						{
							"name": "Copy data to staging",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Lookup Source watermark",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select * from @{item().TABLE_NAME} where @{item().WaterMark_Column} > '@{activity('Lookup Target watermark').output.firstRow.dateofload}' and @{item().WaterMark_Column} <= '@{activity('Lookup Source watermark').output.firstRow.NewWatermarkvalue}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzureSqlSink",
									"preCopyScript": {
										"value": "TRUNCATE TABLE staging.@{item().TABLE_NAME}",
										"type": "Expression"
									},
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "dba_fac_a1_source",
									"type": "DatasetReference",
									"parameters": {
										"schema": "not set - dynamic query used",
										"tblname": "not set - dynamic query - see below"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "dba_fac_a1_target",
									"type": "DatasetReference",
									"parameters": {
										"schema_tgt": "staging",
										"tblname_tgt": {
											"value": "@item().TABLE_NAME",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Sproc update watermark",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data to staging",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_write_watermark]",
								"storedProcedureParameters": {
									"LastModifiedtime": {
										"value": {
											"value": "@{activity('Lookup Source watermark').output.firstRow.NewWatermarkvalue}",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"TableName": {
										"value": {
											"value": "@item().TABLE_NAME",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "facstuff_DatabaseTARGET",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Sproc to copy new rows from staging",
							"description": "copy news rows only to main live table",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Sproc update watermark",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "usp_upsert_@{item().TABLE_NAME}",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "facstuff_DatabaseTARGET",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"tableList": {
				"type": "array",
				"defaultValue": [
					{
						"TABLE_NAME": "customer_table",
						"WaterMark_Column": "LastModifytime",
						"StoredProcedureNameForMergeOperation": "usp_upsert_customer_table"
					},
					{
						"TABLE_NAME": "project_table",
						"WaterMark_Column": "Creationtime",
						"StoredProcedureNameForMergeOperation": "usp_upsert_project_table"
					}
				]
			}
		},
		"folder": {
			"name": "ETL Demo"
		},
		"annotations": [],
		"lastPublishTime": "2022-10-18T15:42:40Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}